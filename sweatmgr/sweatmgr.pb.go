// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sweatmgr.proto

package sweatmgr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Sweat struct {
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Glucose              float32              `protobuf:"fixed32,2,opt,name=glucose,proto3" json:"glucose,omitempty"`
	Chloride             float32              `protobuf:"fixed32,3,opt,name=chloride,proto3" json:"chloride,omitempty"`
	Sodium               float32              `protobuf:"fixed32,4,opt,name=sodium,proto3" json:"sodium,omitempty"`
	Potassium            float32              `protobuf:"fixed32,5,opt,name=potassium,proto3" json:"potassium,omitempty"`
	Magnesium            float32              `protobuf:"fixed32,6,opt,name=magnesium,proto3" json:"magnesium,omitempty"`
	Calcium              float32              `protobuf:"fixed32,7,opt,name=calcium,proto3" json:"calcium,omitempty"`
	Humidity             float32              `protobuf:"fixed32,8,opt,name=humidity,proto3" json:"humidity,omitempty"`
	RoomTemperature      float32              `protobuf:"fixed32,9,opt,name=room_temperature,json=roomTemperature,proto3" json:"room_temperature,omitempty"`
	BodyTemperature      float32              `protobuf:"fixed32,10,opt,name=body_temperature,json=bodyTemperature,proto3" json:"body_temperature,omitempty"`
	Heartbeat            int32                `protobuf:"varint,11,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Sweat) Reset()         { *m = Sweat{} }
func (m *Sweat) String() string { return proto.CompactTextString(m) }
func (*Sweat) ProtoMessage()    {}
func (*Sweat) Descriptor() ([]byte, []int) {
	return fileDescriptor_422955fe4df6d8a7, []int{0}
}

func (m *Sweat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sweat.Unmarshal(m, b)
}
func (m *Sweat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sweat.Marshal(b, m, deterministic)
}
func (m *Sweat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sweat.Merge(m, src)
}
func (m *Sweat) XXX_Size() int {
	return xxx_messageInfo_Sweat.Size(m)
}
func (m *Sweat) XXX_DiscardUnknown() {
	xxx_messageInfo_Sweat.DiscardUnknown(m)
}

var xxx_messageInfo_Sweat proto.InternalMessageInfo

func (m *Sweat) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Sweat) GetGlucose() float32 {
	if m != nil {
		return m.Glucose
	}
	return 0
}

func (m *Sweat) GetChloride() float32 {
	if m != nil {
		return m.Chloride
	}
	return 0
}

func (m *Sweat) GetSodium() float32 {
	if m != nil {
		return m.Sodium
	}
	return 0
}

func (m *Sweat) GetPotassium() float32 {
	if m != nil {
		return m.Potassium
	}
	return 0
}

func (m *Sweat) GetMagnesium() float32 {
	if m != nil {
		return m.Magnesium
	}
	return 0
}

func (m *Sweat) GetCalcium() float32 {
	if m != nil {
		return m.Calcium
	}
	return 0
}

func (m *Sweat) GetHumidity() float32 {
	if m != nil {
		return m.Humidity
	}
	return 0
}

func (m *Sweat) GetRoomTemperature() float32 {
	if m != nil {
		return m.RoomTemperature
	}
	return 0
}

func (m *Sweat) GetBodyTemperature() float32 {
	if m != nil {
		return m.BodyTemperature
	}
	return 0
}

func (m *Sweat) GetHeartbeat() int32 {
	if m != nil {
		return m.Heartbeat
	}
	return 0
}

type SweatStatsRequest struct {
	Userid               string   `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SweatStatsRequest) Reset()         { *m = SweatStatsRequest{} }
func (m *SweatStatsRequest) String() string { return proto.CompactTextString(m) }
func (*SweatStatsRequest) ProtoMessage()    {}
func (*SweatStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_422955fe4df6d8a7, []int{1}
}

func (m *SweatStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SweatStatsRequest.Unmarshal(m, b)
}
func (m *SweatStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SweatStatsRequest.Marshal(b, m, deterministic)
}
func (m *SweatStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SweatStatsRequest.Merge(m, src)
}
func (m *SweatStatsRequest) XXX_Size() int {
	return xxx_messageInfo_SweatStatsRequest.Size(m)
}
func (m *SweatStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SweatStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SweatStatsRequest proto.InternalMessageInfo

func (m *SweatStatsRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

type SweatStatsResponse struct {
	Userid               string   `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Sweat                []*Sweat `protobuf:"bytes,2,rep,name=sweat,proto3" json:"sweat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SweatStatsResponse) Reset()         { *m = SweatStatsResponse{} }
func (m *SweatStatsResponse) String() string { return proto.CompactTextString(m) }
func (*SweatStatsResponse) ProtoMessage()    {}
func (*SweatStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_422955fe4df6d8a7, []int{2}
}

func (m *SweatStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SweatStatsResponse.Unmarshal(m, b)
}
func (m *SweatStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SweatStatsResponse.Marshal(b, m, deterministic)
}
func (m *SweatStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SweatStatsResponse.Merge(m, src)
}
func (m *SweatStatsResponse) XXX_Size() int {
	return xxx_messageInfo_SweatStatsResponse.Size(m)
}
func (m *SweatStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SweatStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SweatStatsResponse proto.InternalMessageInfo

func (m *SweatStatsResponse) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *SweatStatsResponse) GetSweat() []*Sweat {
	if m != nil {
		return m.Sweat
	}
	return nil
}

func init() {
	proto.RegisterType((*Sweat)(nil), "sweatmgr.Sweat")
	proto.RegisterType((*SweatStatsRequest)(nil), "sweatmgr.SweatStatsRequest")
	proto.RegisterType((*SweatStatsResponse)(nil), "sweatmgr.SweatStatsResponse")
}

func init() { proto.RegisterFile("sweatmgr.proto", fileDescriptor_422955fe4df6d8a7) }

var fileDescriptor_422955fe4df6d8a7 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x8b, 0xd4, 0x30,
	0x14, 0xc6, 0x6d, 0xd7, 0xce, 0xb6, 0x6f, 0xd0, 0xd5, 0x1c, 0x24, 0xd4, 0x01, 0x4b, 0x41, 0xa8,
	0x08, 0x5d, 0x18, 0x4f, 0x1e, 0x3d, 0x79, 0xd1, 0x4b, 0x67, 0x0f, 0xde, 0x96, 0xb4, 0x7d, 0x76,
	0x0a, 0xcd, 0xa4, 0x26, 0xaf, 0xc8, 0xfc, 0xe3, 0x9e, 0x25, 0x49, 0x3b, 0x1d, 0x45, 0x8f, 0xdf,
	0xf7, 0xfd, 0x5e, 0xf2, 0xf1, 0x78, 0xf0, 0xdc, 0xfc, 0x44, 0x41, 0xb2, 0xd3, 0xe5, 0xa8, 0x15,
	0x29, 0x16, 0x2f, 0x3a, 0x7d, 0xd3, 0x29, 0xd5, 0x0d, 0x78, 0xef, 0xfc, 0x7a, 0xfa, 0x7e, 0x4f,
	0xbd, 0x44, 0x43, 0x42, 0x8e, 0x1e, 0xcd, 0x7f, 0x85, 0x10, 0x1d, 0x2c, 0xcd, 0x3e, 0x02, 0x34,
	0x1a, 0x05, 0x61, 0xfb, 0x28, 0x88, 0x07, 0x59, 0x50, 0x6c, 0xf7, 0x69, 0xe9, 0xe7, 0xcb, 0x65,
	0xbe, 0x7c, 0x58, 0xe6, 0xab, 0x64, 0xa6, 0x3f, 0x11, 0xe3, 0x70, 0xdb, 0x0d, 0x53, 0xa3, 0x0c,
	0xf2, 0x30, 0x0b, 0x8a, 0xb0, 0x5a, 0x24, 0x4b, 0x21, 0x6e, 0x8e, 0x83, 0xd2, 0x7d, 0x8b, 0xfc,
	0xc6, 0x45, 0x17, 0xcd, 0x5e, 0xc1, 0xc6, 0xa8, 0xb6, 0x9f, 0x24, 0x7f, 0xea, 0x92, 0x59, 0xb1,
	0x1d, 0x24, 0xa3, 0x22, 0x61, 0x8c, 0x8d, 0x22, 0x17, 0xad, 0x86, 0x4d, 0xa5, 0xe8, 0x4e, 0xe8,
	0xd2, 0x8d, 0x4f, 0x2f, 0x86, 0x6d, 0xd2, 0x88, 0xa1, 0xb1, 0xd9, 0xad, 0x6f, 0x32, 0x4b, 0xdb,
	0xe4, 0x38, 0xc9, 0xbe, 0xed, 0xe9, 0xcc, 0x63, 0xdf, 0x64, 0xd1, 0xec, 0x1d, 0xbc, 0xd0, 0x4a,
	0xc9, 0x47, 0x42, 0x39, 0xa2, 0x16, 0x34, 0x69, 0xe4, 0x89, 0x63, 0xee, 0xac, 0xff, 0xb0, 0xda,
	0x16, 0xad, 0x55, 0x7b, 0xfe, 0x03, 0x05, 0x8f, 0x5a, 0xff, 0x1a, 0xdd, 0x41, 0x72, 0x44, 0xa1,
	0xa9, 0x46, 0x41, 0x7c, 0x9b, 0x05, 0x45, 0x54, 0xad, 0x46, 0xfe, 0x1e, 0x5e, 0xba, 0xbd, 0x1f,
	0x48, 0x90, 0xa9, 0xf0, 0xc7, 0x84, 0x86, 0xec, 0x4a, 0x26, 0x83, 0xba, 0x6f, 0xdd, 0xfe, 0x93,
	0x6a, 0x56, 0xf9, 0x01, 0xd8, 0x35, 0x6c, 0x46, 0x75, 0x32, 0xf8, 0x3f, 0x9a, 0xbd, 0x85, 0xc8,
	0x1d, 0x00, 0x0f, 0xb3, 0x9b, 0x62, 0xbb, 0xbf, 0x2b, 0x2f, 0xe7, 0xe1, 0x1e, 0xa9, 0x7c, 0xba,
	0xff, 0x06, 0xb1, 0xd3, 0x5f, 0x3b, 0xcd, 0xbe, 0xc0, 0xb3, 0xcf, 0x48, 0xeb, 0x1f, 0xec, 0xf5,
	0x5f, 0x43, 0xd7, 0x35, 0xd3, 0xdd, 0xbf, 0x43, 0x5f, 0x2b, 0x7f, 0x52, 0x6f, 0xdc, 0xb9, 0x7c,
	0xf8, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xce, 0xfe, 0x77, 0x47, 0x98, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SweatMgrClient is the client API for SweatMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SweatMgrClient interface {
	GetSweatStats(ctx context.Context, in *SweatStatsRequest, opts ...grpc.CallOption) (*SweatStatsResponse, error)
}

type sweatMgrClient struct {
	cc *grpc.ClientConn
}

func NewSweatMgrClient(cc *grpc.ClientConn) SweatMgrClient {
	return &sweatMgrClient{cc}
}

func (c *sweatMgrClient) GetSweatStats(ctx context.Context, in *SweatStatsRequest, opts ...grpc.CallOption) (*SweatStatsResponse, error) {
	out := new(SweatStatsResponse)
	err := c.cc.Invoke(ctx, "/sweatmgr.SweatMgr/GetSweatStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SweatMgrServer is the server API for SweatMgr service.
type SweatMgrServer interface {
	GetSweatStats(context.Context, *SweatStatsRequest) (*SweatStatsResponse, error)
}

func RegisterSweatMgrServer(s *grpc.Server, srv SweatMgrServer) {
	s.RegisterService(&_SweatMgr_serviceDesc, srv)
}

func _SweatMgr_GetSweatStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SweatStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SweatMgrServer).GetSweatStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sweatmgr.SweatMgr/GetSweatStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SweatMgrServer).GetSweatStats(ctx, req.(*SweatStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SweatMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sweatmgr.SweatMgr",
	HandlerType: (*SweatMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSweatStats",
			Handler:    _SweatMgr_GetSweatStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sweatmgr.proto",
}
